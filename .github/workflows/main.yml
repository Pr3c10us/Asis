name: Deploy to Instance

env:
    REPO_NAME: ${{ github.event.repository.name }}
    REPO_URL: ${{ github.event.repository.url }}

on:
    push:
        branches:
            - master

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            # Add admin eviroment secrets to /Admin/.env
            - name: Add admin eviroment secrets to /Admin/.env
              run: |
                  echo "CLIENT_ORIGIN_1=${{ secrets.CLIENT_ORIGIN_1 }}" >> Backend/.env
                  echo "CLIENT_ORIGIN_2=${{ secrets.CLIENT_ORIGIN_2 }}" >> Backend/.env
                  echo "COOKIE_SECRET=${{ secrets.COOKIE_SECRET }}" >> Backend/.env
                  echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> Backend/.env
                  echo "JWT_EXPIRES_IN=${{ secrets.JWT_EXPIRES_IN }}" >> Backend/.env
                  echo "PORT=${{ secrets.PORT }}" >> Backend/.env
                  echo "MONGODB_URL=${{ secrets.MONGODB_URL }}" >> Backend/.env
                  echo "AZURE_STORAGE_ACCOUNT_NAME=${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}" >> Backend/.env
                  echo "ASIS_IMAGE_CONTAINER_NAME=${{ secrets.ASIS_IMAGE_CONTAINER_NAME }}" >> Backend/.env
                  echo "ASIS_DASHBOARD_IMAGE_CONTAINER_NAME=${{ secrets.ASIS_DASHBOARD_IMAGE_CONTAINER_NAME }}" >> Backend/.env
                  echo "AZURE_IMAGE_URL=${{ secrets.AZURE_IMAGE_URL }}" >> Backend/.env
                  echo "STRIPE_SECRETE_KEY=${{ secrets.STRIPE_SECRETE_KEY }}" >> Backend/.env
                  echo "STRIPE_PUBLISHABLE_KEY=${{ secrets.STRIPE_PUBLISHABLE_KEY }}" >> Backend/.env
                  echo "STRIPE_WEBHOOK_SECRETE=${{ secrets.STRIPE_WEBHOOK_SECRETE }}" >> Backend/.env

                  echo "VITE_BACKEND_URL=${{ secrets.VITE_BACKEND_URL }}" >> Admin/.env
                  echo "VITE_BLOB_URL=${{ secrets.VITE_BLOB_URL }}" >> Admin/.env
                  echo "VITE_BLOB_URL_DASHBOARD=${{ secrets.VITE_BLOB_URL_DASHBOARD }}" >> Admin/.env
                  echo "VITE_STRIPE_PUBLIC_KEY=${{ secrets.VITE_STRIPE_PUBLIC_KEY }}" >> Admin/.env
                  echo "VITE_STRIPE_REDIRECT_URL=${{ secrets.VITE_STRIPE_REDIRECT_URL }}" >> Admin/.env

                  echo "VITE_BACKEND_URL=${{ secrets.VITE_BACKEND_URL }}" >> Frontend/.env
                  echo "VITE_BLOB_URL=${{ secrets.VITE_BLOB_URL }}" >> Frontend/.env
                  echo "VITE_BLOB_URL_DASHBOARD=${{ secrets.VITE_BLOB_URL_DASHBOARD }}" >> Frontend/.env
                  echo "VITE_STRIPE_PUBLIC_KEY=${{ secrets.VITE_STRIPE_PUBLIC_KEY }}" >> Frontend/.env
                  echo "VITE_STRIPE_REDIRECT_URL=${{ secrets.VITE_STRIPE_REDIRECT_URL }}" >> Frontend/.env
                  
            - name: Build and package the code
              run: |
                  ls -la
                  cd Frontend
                  npm install
                  npm run build
                  cd ../Admin
                  npm install
                  npm run build
                  ls -la

            - name: Connect to AWS Lightsail, extract file and delete the file
              uses: appleboy/ssh-action@v0.1.7
              with:
                  host: ${{ secrets.HOST_IP }}
                  username: ${{ secrets.USERNAME }}
                  password: ${{ secrets.SSH_PASSWORD }}
                  passphrase: ""
                  port: 22
                  script: |
                      if [ -d /var/www/Asis ]; then
                        cd /var/www/Asis && sudo git pull
                      else
                        sudo git clone https://github.com/Pr3c10us/Asis.git /var/www/Asis
                      fi
                      cd /var/www/Asis/Backend && sudo npm install && if sudo npm stop; then
                        # If command1 succeeds
                        echo "Command 1 succeeded"
                        # Run another command
                        sudo npm start
                      else
                          # If command1 fails
                          echo "Command 1 failed"
                          # Run a different command
                          sudo npm start
                      fi
                      if [ ! -d /var/www/Asis/Frontend/dist ]; then
                        sudo mkdir /var/www/Asis/Frontend/dist
                      fi
                      if [ ! -d /var/www/Asis/Admin/dist ]; then
                        sudo mkdir /var/www/Asis/Admin/dist
                      fi
                      sudo chown -R asis:asis /var/www/Asis

            - name: copy file via ssh password
              uses: appleboy/scp-action@v0.1.4
              with:
                  host: ${{ secrets.HOST_IP }}
                  username: ${{ secrets.USERNAME }}
                  password: ${{ secrets.SSH_PASSWORD }}
                  source: "Frontend/dist/"
                  target: "/var/www/Asis/Frontend/"
                  rm: true
                  strip_components: 1

            - name: copy file via ssh password
              uses: appleboy/scp-action@v0.1.4
              with:
                  host: ${{ secrets.HOST_IP }}
                  username: ${{ secrets.USERNAME }}
                  password: ${{ secrets.SSH_PASSWORD }}
                  source: "Admin/dist/"
                  target: "/var/www/Asis/Admin/"
                  strip_components: 1
                  rm: true
